# hw definition file for processing by chibios_hwdef.py
# for the ARKV6X hardware

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 8000000

# ChibiOS system timer
STM32_ST_USE_TIMER 2
define CH_CFG_ST_RESOLUTION 16

# board ID. See Tools/AP_Bootloader/board_types.txt
APJ_BOARD_ID AP_HW_MATEKH743


# Enable all IMUs to be used and therefore three active EKF Lanes
define HAL_EKF_IMU_MASK_DEFAULT 7

FLASH_RESERVE_START_KB 128

# to be compatible with the px4 bootloader we need
# to use a different RAM_MAP
# env USE_ALT_RAM_MAP 1

FLASH_SIZE_KB 2048
env OPTIMIZE -O2

# order of UARTs (and USB) no IO MCU
SERIAL_ORDER OTG1 UART7 USART1 UART8 USART2 UART4 USART3 USART6 OTG2

# debug console
STDOUT_SERIAL SD3
STDOUT_BAUDRATE 57600

# default to all pins low to avoid ESD issues
DEFAULTGPIO OUTPUT LOW PULLDOWN

# USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9 VBUS INPUT OPENDRAIN

# pins for SWD debugging
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# telem1
PE8 UART7_TX UART7
PF6 UART7_RX UART7
PF8 UART7_RTS UART7
PE10 UART7_CTS UART7

# telem2
# PC12 UART5_TX UART5
# PD2 UART5_RX UART5

# telem3
PA3 USART2_RX USART2
PD5 USART2_TX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# GPS1
PB6 USART1_TX USART1
PB7 USART1_RX USART1

# GPS2
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# uart4
PH13 UART4_TX UART4
PH14 UART4_RX UART4

# debug uart
PD8 USART3_TX USART3
PD9 USART3_RX USART3

# used for RC SBUS
PC6 USART6_TX USART6
PC7 USART6_RX USART6

# Ethernet
PB11 ETH_RMII_TX_EN     ETH1
PG13 ETH_RMII_TXD0      ETH1
PG12 ETH_RMII_TXD1      ETH1
PC4  ETH_RMII_RXD0      ETH1
PC5  ETH_RMII_RXD1      ETH1
PA7  ETH_RMII_CRS_DV    ETH1
PA1  ETH_RMII_REF_CLK   ETH1
PC1  ETH_MDC            ETH1
PA2  ETH_MDIO           ETH1

PG15 GPIO_ETH_ENABLE OUTPUT HIGH GPIO(113)
define HAL_GPIO_ETH_ENABLE 113

define BOARD_PHY_ID  MII_LAN8742A_ID
define BOARD_PHY_RMII
define AP_PERIPH_NETWORKING_ENABLED 1

# ADC
PA0 SCALED1_V3V3 ADC1 SCALE(2)
PA4 SCALED2_V3V3 ADC1 SCALE(2)
PB0 SCALED3_V3V3 ADC1 SCALE(2)
PF12 SCALED4_V3V3 ADC1 SCALE(2)

PB1 VDD_5V_SENS  ADC1 SCALE(2)

# pin7 on AD&IO, analog 12
PC2 ADC1_6V6 ADC1 SCALE(2)

# pin6 on AD&IO, analog 13
PC3 ADC1_3V3 ADC1 SCALE(1)

# SPI1 for IMU1 (IIM42652)
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1
PC15 IMU1_CS CS

# SPI4 for IMU2 (ICM42605)
PE11 IMU2_CS CS
PE12 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE14 SPI4_MOSI SPI4

# PWM output pins
PI0  TIM5_CH4 TIM5 PWM(1) GPIO(50)
PH12 TIM5_CH3 TIM5 PWM(2) GPIO(51)
PH11 TIM5_CH2 TIM5 PWM(3) GPIO(52)
PH10 TIM5_CH1 TIM5 PWM(4) GPIO(53)
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)

# we need to disable DMA on the last 2 FMU channels
# as timer 12 doesn't have a TIMn_UP DMA option
PH6  TIM12_CH1 TIM12 PWM(7) GPIO(56) NODMA
PH9  TIM12_CH2 TIM12 PWM(8) GPIO(57) NODMA

# CAN bus
PD0  CAN1_RX CAN1
PD1  CAN1_TX CAN1

PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2


# I2C buses

# I2C1, GPS+MAG
PB9 I2C1_SDA I2C1
PB8 I2C1_SCL I2C1

# I2C2, GPS2+MAG
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# I2C3, MS5611, external
PA8 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

# I2C4 internal
PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4

# order of I2C buses
I2C_ORDER I2C4 I2C1 I2C2 I2C3
heater - No heater on Rev 1
PB10 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80

# Setup the IMU heater
define HAL_HAVE_IMU_HEATER 1
define HAL_IMU_TEMP_DEFAULT 45
define HAL_IMUHEAT_P_DEFAULT 50
define HAL_IMUHEAT_I_DEFAULT 0.07

# armed indication
PE6 nARMED OUTPUT HIGH

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1
define FATFS_HAL_DEVICE SDCD1

# LEDs
PE3 LED_RED OUTPUT OPENDRAIN GPIO(90) HIGH
PE4 LED_GREEN OUTPUT OPENDRAIN GPIO(91) HIGH
PE5 LED_BLUE OUTPUT OPENDRAIN GPIO(92) HIGH

# setup for "pixracer" RGB LEDs
define AP_NOTIFY_GPIO_LED_RGB_RED_PIN 90
define AP_NOTIFY_GPIO_LED_RGB_GREEN_PIN 91
define AP_NOTIFY_GPIO_LED_RGB_BLUE_PIN 92

define AP_NOTIFY_GPIO_LED_RGB_ENABLED 1

# ID pins
PG0 HW_VER_REV_DRIVE OUTPUT LOW
# PH3 HW_VER_SENS ADC3 SCALE(1)
# PH4 HW_REV_SENS ADC3 SCALE(1)

# PWM output for buzzer
PF9 TIM14_CH1 TIM14 GPIO(77) ALARM

# RC input
PI5 TIM8_CH1 TIM8 RCININT PULLDOWN LOW

define HAL_STORAGE_SIZE 32768

# IMU devices for ARKV6X
SPIDEV iim42652     SPI1    DEVID1  IMU1_CS     MODE3   2*MHZ   16*MHZ
SPIDEV icm42605     SPI4    DEVID1  IMU2_CS     MODE3   2*MHZ   16*MHZ

DMA_NOSHARE SPI1* SPI4*

# ARKV6X 3 IMUs
IMU Invensensev3 SPI:iim42652 ROTATION_ROLL_180
IMU Invensensev3 SPI:icm42605 ROTATION_ROLL_180

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# BARO
BARO MS56XX I2C:0:0x77

define HAL_DEFAULT_INS_FAST_SAMPLE 7

# enable RAMTROM parameter storage
# define HAL_STORAGE_SIZE 32768
# define HAL_WITH_RAMTRON 1

# INA226 battery monitor
define HAL_BATTMON_INA2XX_BUS 1
define HAL_BATTMON_INA2XX_ADDR 0
define HAL_BATT_MONITOR_DEFAULT 21

# allow to have have a dedicated safety switch pin
# define HAL_HAVE_SAFETY_SWITCH 1

DMA_PRIORITY SDMMC* USART6* ADC* UART* USART* SPI* TIM*

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

# ROMFS io_firmware.bin Tools/IO_Firmware/iofirmware_lowpolh.bin

# enable DFU reboot for installing bootloader
# note that if firmware is build with --secure-bl then DFU is
# disabled
ENABLE_DFU_BOOT 1

# bootloader embedding / bootloader flashing not available
define AP_BOOTLOADER_FLASHING_ENABLED 0
